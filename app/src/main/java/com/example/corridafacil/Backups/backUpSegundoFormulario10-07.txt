package com.example.corridafacil.Authentication.Register.Formularios

import android.content.ContentValues
import android.content.Intent
import android.os.Bundle
import android.os.Handler
import android.util.Log
import android.view.View
import android.widget.Button
import android.widget.EditText
import androidx.appcompat.app.AppCompatActivity
import com.example.corridafacil.AlertsViews.Alerts
import com.example.corridafacil.Authentication.AuthenticationPhone
import com.example.corridafacil.R
import com.google.firebase.FirebaseException
import com.google.firebase.auth.FirebaseAuth
import com.google.firebase.auth.FirebaseAuthInvalidCredentialsException
import com.google.firebase.auth.PhoneAuthCredential
import com.google.firebase.auth.PhoneAuthProvider


class SegundoFormulario : AppCompatActivity() {
    private var verificandoEValidandoNumeroTelefone = AuthenticationPhone()
    private lateinit var codigoSMSDigitadoPeloUsuario:EditText
    private lateinit var buttonNextPage: Button
    private lateinit var buttonResendSmsCode: Button
    private lateinit var mCallbacks:PhoneAuthProvider.OnVerificationStateChangedCallbacks
    private lateinit var telefonePassageiro: String
    private lateinit var codeSms:String
    private  var mAuth = FirebaseAuth.getInstance()
    private lateinit var phoneAuthToken: PhoneAuthProvider.ForceResendingToken

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_register_form03)

        startVaribles()

        mCallbacks = object : PhoneAuthProvider.OnVerificationStateChangedCallbacks(){
            override fun onCodeSent(p0: String, p1: PhoneAuthProvider.ForceResendingToken) {
                super.onCodeSent(p0, p1)
                codeSms = p0
                phoneAuthToken = p1
            }
            override fun onVerificationCompleted(p0: PhoneAuthCredential) {
                val code = p0.smsCode
                codigoSMSDigitadoPeloUsuario.setText(code)
                code?.let {
                    var credential = verificandoEValidandoNumeroTelefone.verifyPhoneNumberWithCode(codeSms,it)
                    //checandoNumeroDeTelefoneComSignEirParaProximaPagina(credential)
                }
            }
            override fun onVerificationFailed(p0: FirebaseException) {
                Log.d(ContentValues.TAG, "Teste de saida: "+p0)
            }
        }
        verificandoEValidandoNumeroTelefone.startPhoneNumberVerification(telefonePassageiro, mCallbacks)

    }

    private fun initDialogLoad(){
        val loadingDialog = Alerts(this)
        loadingDialog.startLoadingDialog()
        val handler = Handler()
        handler.postDelayed({
            loadingDialog.dimissDialog()
        }, 60L)

    }
    private fun startVaribles() {
        telefonePassageiro = intent.getStringExtra("telefone").toString()
        codigoSMSDigitadoPeloUsuario = findViewById(R.id.codeVerification)
        buttonNextPage = findViewById(R.id.button4)
        buttonResendSmsCode = findViewById(R.id.resendSmsCode)

        habilitarButtonResendSmsCodeApos60segundos()

    }

    fun buttonNextPage(v:View) {
        Log.d(ContentValues.TAG,"Codigo sms " + codigoSMSDigitadoPeloUsuario.text.toString())
        buttonNextPage.setOnClickListener {
            var credential = verificandoEValidandoNumeroTelefone.verifyPhoneNumberWithCode(codeSms,codigoSMSDigitadoPeloUsuario.text.toString())
            checandoNumeroDeTelefoneComSignEirParaProximaPagina(credential)
        }

    }

    fun habilitarButtonResendSmsCodeApos60segundos(){
        buttonResendSmsCode.isEnabled = false
        Handler().postDelayed(
            { buttonResendSmsCode.setEnabled(true) }, 10000//Specific time in milliseconds
        )
        buttonResendSmsCode.setOnClickListener {
            reenviarCodigoSms()
        }
    }

    private fun checandoNumeroDeTelefoneComSignEirParaProximaPagina(credential: PhoneAuthCredential) {
        Log.d(ContentValues.TAG,"Credentials phone" + credential)
        mAuth.signInWithCredential(credential)
            .addOnCompleteListener { task ->
                if (task.isSuccessful){
                    nextPage()
                }else{
                    Log.d(ContentValues.TAG,"Falha no envio")
                    Log.d(ContentValues.TAG, "signInWithCredential:failure ", task.getException());

                }
            }
    }

    private fun nextPage(){
        var irParaPaginaTerceiroFormularios = Intent(this, TerceiroFormulario::class.java)
        startActivity(irParaPaginaTerceiroFormularios)
        finish()
    }

    private fun reenviarCodigoSms(){
        verificandoEValidandoNumeroTelefone.resendVerificationCode(telefonePassageiro,phoneAuthToken,mCallbacks)
    }


}

